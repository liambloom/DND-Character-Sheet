@font-face {
    font-family: Kalam;
    src: url(/static/fonts/Kalam/Kalam-Regular.ttf);
    ascent-override: 100%;
    descent-override: 20%;
}
@font-face {
    font-family: "Architects Daughter";
    src: url(/static/fonts/Architects_Daughter/ArchitectsDaughter-Regular.ttf)
}

[contentEditable]:where(:not(#title)), .written, .standaloneLabeledValue > :first-child, .stat-mod, #playerName {
    font-family: "Architects Daughter", "Bradley Hand", cursive;
}
#misc > * > * > :not(.topText, .sectionTitle, #death-saves-grid), .stat-val, .standaloneLabeledValue > :first-child, .spellcasting-header-value, .spellcasting-header-value > [contenteditable],  .header-large-value {
    font-family: Kalam, "Bradley Hand", cursive;
}
:is(#misc > * > * > :not(.topText, .sectionTitle, #death-saves-grid), .stat-val, .standaloneLabeledValue > :first-child) [contenteditable] {
    font-family: inherit;
}

[contentEditable] {
    text-overflow: clip;
    white-space: pre;
    overflow:hidden;
    outline: none;
    border: none;
    /* border-bottom: 1px solid transparent; */
    display: inline;
}
[contentEditable="true"]:not(#title), [contentEditable="plaintext-only"]:not(#title) {
    background-color: #ddd;
    cursor: text;
    /* border-bottom-color: black; */
}
:is([contentEditable="true"], [contentEditable="plaintext-only"]):not([data-default], :is(.invalid:not(.ignore-invalid), .changed):not(:focus-within)):empty::before {
    content: "00";
    color: transparent;
}

.invalid:not(.ignore-invalid):focus-within, .invalid:not(.ignore-invalid):focus-within .inherit-invalid {
    border-color: red;
    box-shadow: 0 0 10px red;
}
.invalid:not(:focus-within, .ignore-invalid), .changed {
    position: relative;
    /* padding-right: calc(1.1547em + 5px); 1.1547 = 2 / sqrt(3) */
}
.invalid:not(:focus-within, .ignore-invalid)::after, .changed:not(.invalid, .slots-expended, .slots-total)::after {
    /* position: absolute; */
    right: 2px;
    /* top: 50%; */
    /* translate: 0 -50%; */
    font-size: 0.9em;
    border-color: transparent;
    border-style: none solid solid;
    border-width: 1em 0.5773em; /* 0.5773 = 1/sqrt(3) */
    width: 0;
    height: 0;
    display: inline-flex;
    justify-content: center;
    color: white;
    font-weight: bold;
    margin-left: 5px;
    content: "!";
    font-family: Overpass, Helvetica, sans-serif;
    position: sticky;
}
.changed:not(.invalid)::after {
    border-bottom-color: blue;
}
.invalid:not(:focus-within, .ignore-invalid)::after {
    border-bottom-color: #d00;
}

[data-default]:empty::before {
    content: attr(data-default);
    color: gray;
}
[data-default]:is([contentEditable="false"], :not([contenteditable])):empty::before {
    color: black;
}

.standaloneLabeledValue > :first-child > *, .stat-val, .placeholder::before,
#misc > * > * > :not(.topText, .sectionTitle, #death-saves-grid), .spellcasting-header-value > div,
.spell-level-label, .slots-total, .slots-expended {
    position: absolute;
    top: 50%;
    left: 50%;
    translate: -50% -50%;
}
body {
    background-color: #ccc;
    font-weight: 300;
    font-size: 12px;
    padding: 8px 0;
}
body.dragHappening {
    user-select: none;
    cursor: grabbing;
}
body.dragHappening * {
    pointer-events: none;
}
.stat-val, .standaloneLabeledValue > :first-child, .inputLine:not(.topText) {
    font-weight: 450;
}
#inspiration-label {
    cursor: pointer;
}
#inspiration + div {
    display: none;
    font-size: 28px;
    font-weight: bold;
}
#inspiration:checked + div {
    display: initial;
}
main {
    display: flex;
    flex-direction: column;
    gap: 15px;
}
.page {
    width: 8.5in;
    height: 11in;
    background-color: white;
    box-shadow: 10px 10px 5px #888;
    margin: auto;
    padding: 0.5in;
}
#mainpage {
    display: grid;
    grid-template-areas:
        "header header header"
        "numbers health character"
        "numbers attacks features"
        "proficiencies equipment features";
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: 1fr 3fr 2fr 2fr;
    gap: 10px;
}
header.page-header {
    grid-area: header;
    background-color: #ccc;
    margin-bottom: 10px;
    display: grid;
    grid-template-columns: 20px 2fr 3fr 20px;
    grid-template-areas: "left-banner name other right-banner";
    padding: 15px 0;
    /* gap: 10px; */
    min-height: 0;
    position: relative;
}
.header-label {
    text-transform: uppercase;
    font-size: 9px;
}
.header-labeled-container {
    grid-area: name;
    justify-content: center;
    position: relative;
    top: 50%;
    translate: 0 -50%;
    min-width: 0;
    min-height: 0;
    max-height: 100%;
    display: flex;
    flex-direction: column;
}
.header-large-value-box, .left-header-banner, .right-header-banner {
    border-width: 5px 2px;
    border-style: double solid;
    border-color: black;
    height: 40px;
    background-color: white;
}
.header-large-value-box {
    margin: 0;
    margin-top: 12px;
    overflow-x: auto;
    padding-left: 5px;
    border-right: none;
}
.header-large-value-container {
    position: relative;
    top: 50%;
    translate: 0 -50%;
}
.header-large-value {
    display: inline;
    font-size: 26px;
}
.header-large-label {
    margin-left: 21px;
    font-size: 10px;
    height: 12px;
}
/* #left-name-banner-container {
} */
.left-header-banner {
    grid-area: "left-banner";
    position: relative;
    width: calc(100% + 15px);
    color: transparent;
    top: 50%;
    translate: 0 calc(-50% + 12px);
    font-size: 23px;
}
.header-banner-back {
    position: absolute;
    width: 0;
    height: 0;
    bottom: 0;
    right: 0;
    border-color: #888 transparent transparent transparent;
    border-style: solid;
    border-width: 7px 0 0 17px;
}
.right-header-banner {
    align-self: center;
    grid-area: right-banner;
    border-left: none;
}
.header-other {
    grid-area: other;
    border-color: #ccc black;
    border-style: solid double;
    border-width: 5px;
    background-color: white;
}
.header-other > div {
    height: 100%;
    background-color: #ccc;
}
#main-header-other-contents {
    background-color: white;
    padding: 5px 10px;
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(2, 1fr 1px auto);
    grid-template-areas: 
        "class-level background player-name"
        "hr1 hr1 hr1"
        "class-level-label background-label player-name-label"
        "race alignment xp"
        "hr2 hr2 hr2"
        "race-label alignment-label xp-label";
    gap: 1px 5px;
}
.header-other-contents {
    border-color: black;
    border-style: double solid;
    border-width: 5px 2px;
    height: 100%;
    width: calc(100% + 4px);
    border-radius: 15px;
    box-sizing: border-box;
    position: relative;
    right: 2px;
}

#hr1 {
    grid-area: hr1;
}
#hr2 {
    grid-area: hr2;
}
#hr1, #hr2 {
    width: 100%;
    height: 100%;
    background-color: #ccc;
}

#numbers {
    grid-area: numbers;
    display: grid;
    grid-template-columns: 1fr 2fr;
    grid-template-areas: "stats other";
    gap: 7px;
    min-width: 0;
}
#stats {
    grid-area: stats;
    background-color: #ccc;
    display: flex;
    flex-direction: column;
    justify-content: space-around;
    align-items: center;
    min-width: 0;
    border-radius: 10px;
}
#right-number-flex {
    grid-area: other;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    min-width: 0;
}
.standaloneLabeledValue {
    width: 100%;
    display: grid;
    grid-template-areas: "value label";
    grid-template-columns: 34px 1fr;
    height: 41px;
}
.standaloneLabeledValue > :first-child {
    height: 35px;
    width: 35px;
    grid-area: value;
    border: 3px solid black;
    border-radius: 50%;
    position: relative;
}
.standaloneLabeledValue > :first-child > * {
    font-size: 20px;
    margin: 0;
}
#savingThrowsContainer, #skillContainer {
    border: 2px solid black;
    border-radius: 5px;
    width: 100%;
    box-sizing: border-box;
}
#savingThrows, #skills {
    margin: 7px 0 7px 5px;
    text-align: left;
    display: flex;
    flex-direction: column;
    gap: 3.5px;
    overflow: hidden;
}
.sectionTitle, .standaloneLabeledValue > :nth-child(2) > div {
    font-weight: bold;
    text-transform: uppercase;
    font-size: 10px;
    width: 100%;
    text-align: center;
    margin: 0;
    position: absolute;
}
.sectionTitle:not(.staticPos) {
    bottom: 2px;
}
.sectionTitle.staticPos {
    position: initial;
}
.sectionTitle {
    display: block;
}
.sectionTitle.staticPos:first-child {
    margin-top: 2px;
}
.sectionTitle.staticPos:last-child {
    margin-bottom: 2px;
}
.standaloneLabeledValue > :nth-child(2) {
    margin: 5px 0;
    grid-area: label;
    width: auto;
    border: 2px solid black;
    border-radius: 0 5px 5px 0;
    border-left: none;
    position: relative;
}
.standaloneLabeledValue > :nth-child(2) > div {
    position: absolute;
    top: 50%;
    transform: translateY(-50%);
    text-transform: uppercase;
}

.stat > .sectionTitle {
    font-size: 8px;
}
.stat {
    border: 3px solid black;
    border-radius: 5px;
    width: 75%;
    height: 11%;
    text-align: center;
    position: relative;
    background-color: white;
}
.stat-val {
    width: 100%;
    max-width: 100%;
    display: block;
    font-size: 35px;
    overflow: hidden;
}
.stat-mod {
    border: 3px solid black;
    font-size: 14px;
    width: 20px;
    height: 16px;
    padding: 2px;
    border-radius: 50%;
    text-align: center;
    background-color: white;
    position: absolute;
    bottom: 0;
    left: 50%;
    translate: -50% 50%;
}
.stat-mod > div {
    position: relative;
    top: 50%;
    translate: 0 -50%;
}
#other-proficiencies, #equipment, #attacks, #features, #misc > * > * {
    border-width: 2px 5px;
    border-style: solid double;
    border-color: black;
    min-width: 0;
}
#other-proficiencies, #equipment, #attacks, #features {
    border-radius: 5px;
}
#lower-proficiencies {
    grid-area: proficiencies;
    display: flex;
    flex-direction: column;
    gap: 7px;
    min-height: 0;
}
#other-proficiencies {
    flex-grow: 1;
    position: relative;
    padding: 10px;
    padding-bottom: 20px;
    min-height: 0;
}
#other-proficiencies-content {
    max-height: 100%;
    overflow-y: auto;
}
#other-proficiencies p {
    margin: 0 0 5px 5px;
}
#other-proficiencies p::first-letter {
    margin-left: -5px;
}
#other-proficiencies [contentEditable] {
    white-space: inherit;
    word-wrap: break-word;
}
.prof-type {
    font-weight: bold;
}
.placeholder {
    background-color: gray;
    position: relative;
    min-height: 1em;
}
.placeholder::before {
    content: "PLACEHOLDER";
}
.placeholder > .sectionTitle {
    position: absolute;
    bottom: 2px;
}
#misc {
    background-color: #ccc;
    grid-area: health;
    display: grid;
    grid-template-areas: "top" "middle" "bottom";
    grid-template-columns: 1fr;
    grid-template-rows: 3fr 7fr 3fr;
    padding: 10px;
    gap: 10px;
    min-width: 0;
}
.inputLine, .topText {
    overflow: auto;
    max-width: 100%;
    white-space: nowrap;
    text-align: center;
    box-sizing: border-box;
    max-width: 100%;
    /* padding: 10px 0; */
    display: flex;
    align-items: center;
}
:is(.inputLine, .topText) :first-child {
    margin-left: auto;
}
:is(.inputLine, .topText) > :last-child {
    margin-right: auto;
}
:is(.inputLine, .topText) > * {
    flex-shrink: 0;
}
.inputLine:focus-within {
    z-index: 1;
}
.topText {
    position: relative;
    margin-top: 2px;
    width: min-content;
    margin: auto;
    /* width: 100%; */
}
.inputLine [contenteditable] {
    position: static;
}

#misc > * {
    display: grid;
    min-width: 0;
}
#misc > * > * {
    background-color: white;
    /* border: 3px solid black; */
    border-radius: 5px;
    position: relative;
}
#misc > * > * > :not(.topText, .sectionTitle) {
    font-size: 35px;
}
/* #misc > * > * > .inputLine:not(.topText, .sectionTitle) {
    font-size: 0;
}
#misc > * > * > .inputLine:not(.topText, .sectionTitle) [contenteditable] {
    font-size: 35px;
} */
#misc-row-1 {
    grid-area: top;
    grid-template-areas: "ac initiative speed";
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: 1fr;
    gap: 10px;
}
#ac-container {
    grid-area: ac;
}
#ac-container .sectionTitle {
    font-size: 9px;
}
#initiative-container {
    grid-area: initiative;
}
#speed-container {
    grid-area: speed;
}
#misc-row-2 {
    grid-area: middle;
    grid-template-areas: "health" "temp";
    grid-template-columns: 1fr;
    grid-template-rows: 1.3fr 1fr;
    gap: 5px;
}
#health {
    grid-area: health;
    border-radius: 5px 5px 0 0;
}
#temp-hp {
    grid-area: temp;
    border-radius: 0 0 5px 5px;
}
#misc-row-3 {
    grid-area: bottom;
    grid-template-areas: "hit-dice death-saves";
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: 1fr;
    gap: 10px;
}
#hit-dice {
    grid-area: hit-dice;
}
#hit-dice .inputLine:not(.topText) {
    font-size: 30px;
}
#death-saves {
    grid-area: death-saves;
}
.list {
    display: flex;
    flex-direction: column;
    gap: 5px;
    text-align: center;
    overflow-y: auto;
}
.list-add {
    display: flex;
    cursor: pointer;
    padding: 5px;
    gap: 2px;
    flex-direction: row;
    align-items: center;
    background-color: #e0e0e0;
    border-radius: 2px;
}
.list-add:hover {
    background-color: #ccc;
}
.list-add-line {
    flex-grow: 1;
    background-color: black;
    height: 1px;
}
.list-plus {
    background-color: #00cc00;
    color: white;
    border-radius: 50%;
    width: 21px;
    height: 21px;
    position: relative;
}
.list-plus div {
    position: absolute;
    background-color: white;
}
.list-plus-h {
    top: 10px;
    left: 2px;
    height: 1px;
    width: 17px;
}
.list-plus-v {
    top: 2px;
    left: 10px;
    height: 16px;
    width: 1px;
}

#attacks {
    grid-area: attacks;
    position: relative;
    padding: 5px;
    padding-bottom: 2px;
    min-height: 0;
    display: flex;
    flex-direction: column;
}
#attacks .sectionTitle {
    position: static;
    margin-top: 5px;
}
#attacks-table {
    flex-grow: 2;
}
.list-header, .list-row {
    border-radius: 5px;
}
.list-row {
    display: grid;
    gap: 5px;
    grid-template-columns: 1fr;
    grid-template-areas: "content";
}
.list-row > :last-child {
    grid-area: content;
}
#attacks-header, .weapon-content {
    display: grid;
    gap: 5px;
    grid-template-columns: 2fr 1fr 2fr;
    grid-template-areas: "name bonus damage";
}
:is(.list-header, .list-row) > div {
    min-width: 0;
}
.list-header {
    text-transform: uppercase;
    font-size: 8px;
    font-weight: normal;
    text-align: left;
    color: #444;
    white-space: nowrap;
    text-overflow: ellipsis;
}
.list-header > div {
    text-overflow: ellipsis;
    overflow: hidden;
}
.list-delete {
    grid-area: delete;
    display: none;
}
.weapon-name {
    grid-area: name;
}
.weapon-bonus {
    grid-area: bonus;
}
.weapon-damage {
    grid-area: damage;
}
.list-row :is(.weapon-name, .weapon-bonus, .weapon-damage) {
    background-color: #ccc;
    border-radius: 4px 0;
    padding: 4px;
    overflow: auto;
}
body[data-editing="true"] .list-header {
    margin-left: 38px;
}
body[data-editing="true"] .list-row {
    grid-template-columns: auto auto 1fr;
    grid-template-areas: "move delete content";
    background-color: #eee;
}
body[data-editing="false"] :is(.list-delete, .list-move, .list-add) {
    display: none;
}
.list-row:first-child:nth-last-child(2) .list-move {
    opacity: 0.5;
    cursor: initial;
    pointer-events: none;
}
.list-move {
    grid-area: move;
    display: grid;
    grid-template-rows: repeat(3, 3px);
    grid-template-columns: repeat(2, 3px);
    gap: 2px;
    align-self: center;
    cursor: grab;
    padding: 2px;
    border-radius: 2px;
}
.list-move:hover {
    background-color: #eee;
}
.list-move:active {
    cursor: grabbing;
}
.list-move div {
    width: 3px;
    height: 3px;
    background-color: #888;
    border-radius: 50%;
}
.list-delete {
    display: block;
    align-self: center;
    cursor: pointer;
    padding: 2px;
    border-radius: 2px;
    background: none;
}
.list-delete:hover {
    background-color: #eee;
}
.list-delete img {
    width: 12px;
    aspect-ratio: 1;
    vertical-align: middle;
}
#attacks-text-container {
    flex: 1 3 auto;
    overflow: auto;
    padding: 5px;
    margin-top: 5px;
    border-top: 1px solid black;
    /* padding-top: 0; */
}
#other-proficiencies p, .multi-line-text {
    white-space: normal;
    word-wrap: break-word;
}
.dragging {
    z-index: 2;
    opacity: 0.8;
}

#equipment {
    grid-area: equipment;
    position: relative;
}
#equipment-content {
    position: absolute;
    top: 5px;
    bottom: 20px;
    left: -10px;
    right: 5px;
    display: grid;
    gap: 5px;
    grid-template-columns: auto 1fr;
    grid-template-areas: "money text";
}
#equipment-text-container {
    grid-area: text;
    overflow: auto;
    min-width: 0;
}
#money {
    grid-area: money;
    display: flex;
    flex-direction: column;
    gap: 5px;
}
.money-denom {
    display: grid;
    grid-template-columns: 17px 1fr;
    grid-template-areas: "label value";
    height: 30px;
}
.money-denom-label-container {
    grid-area: label;
    width: 20px;
    border: 2px solid black;
    border-right: none;
    border-radius: 10px 0 0 10px;
    font-size: 8px;
    height: 12px;
    color: #444;
    background-color: white;
    align-self: center;
    position: relative;
}
.money-denom-label {
    position: absolute;
    top: calc(50% + 1px);
    left: 3px;
    translate: 0 -50%;
}
.money-value-container {
    grid-area: value;
    height: 26px;
    border-radius: 15px;
    width: 50px;
    border-width: 2px 5px;
    border-style: solid double;
    border-color: black;
    background-color: white;
    display: flex;
    flex-direction: column;
    justify-content: center;
    z-index: 1;
}
.money-value {
    text-align: center;
    overflow-x: auto;
    font-size: 14px;
}

#character {
    grid-area: character;
}
#features {
    grid-area: features;
    padding: 5px;
    padding-bottom: 20px;
    position: relative;
}
#features-list {
    width: 100%;
    height: 100%;
}
.feature {
    text-align: left;
    overflow: hidden;
    
}
body[data-editing="false"] .feature {
    padding-left: 5px;
}
body[data-editing="false"] .feature::first-letter {
    margin-left: -5px;
}
.feature-name {
    font-weight: bold;
    letter-spacing: 0.06em;
}
body[data-editing="true"] .feature-uses {
    background-color: #bbb;
    border-radius: 3px;
    padding: 2px;
}
body[data-editing="true"] .feature-uses, body[data-editing="false"] .feature-uses-value-container {
    margin-left: 0.35em;
}
.feature-uses {
    max-width: 100%;
    white-space: nowrap;
}
.feature-uses-checkbox {
    vertical-align: middle;
}
body[data-editing="false"] :is(.feature-uses-checkbox, .feature-uses-blank), .feature-uses-checkbox:checked + .feature-uses-blank,
.feature-uses-checkbox:not(:checked) + .feature-uses-blank + .feature-uses-value-container {
    display: none;
}

#death-saves-grid {
    display: grid;
    padding: 10px 5px;
    gap: 10px 3px;
    grid-template-columns: min-content 1fr;
    grid-template-areas:
        "success-label success-counter"
        "fail-label fail-counter";
}
#ds-success-label {
    grid-area: success-label;
}
#ds-success-counter {
    grid-area: success-counter;
}
#ds-fail-label {
    grid-area: fail-label;
}
#ds-fail-counter {
    grid-area: fail-counter;
}
.ds-label {
    text-transform: uppercase;
    text-align: right;
    font-size: 9px;
}
.ds-counter {
    position: relative;
}
.ds-boxes, .ds-line {
    position: absolute;
    top: 50%;
    translate: 0 -50%;
}
.ds-boxes {
    left: 0;
    right: 0;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
}
.ds-line {
    border: 1px solid black;
    height: 1px;
    left: 3px;
    right: 3px;
}
.ds-boxes label {
    font-size: 0;
}
.ds-boxes .customCheckbox {
    margin: 0;
    width: 11px;
    height: 11px;
}


#hp {
    font-size: 20px;
}
.proficiency {
    white-space: nowrap;
}
.proficiencyBonusStat {
    color: #888;
}

.spell-page {
    display: grid;
    grid-template-rows: 1fr 7fr;
    grid-template-areas: "header" "columns";
}
.spellcasting-header-other-contents {
    display: grid;
    justify-items: center;
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: min-content;
    padding: 5px;
    gap: 5px;
}
.spellcasting-header-value {
    width: 80px;
    height: 40px;
    border-radius: 15px;
    border-color: black;
    border-width: 2px 5px;
    border-style: solid double;
    background-color: white;
    position: relative;
    font-size: 22px;
}
.spellsheet-delete {
    position: absolute;
    top: 50%;
    left: -4px;
    translate: -100% -50%;
    padding: 5px;
    border-radius: 3px;
}
body[data-editing="false"] .spellsheet-delete {
    display: none;
}
.spellsheet-delete > img {
    height: 30px;
}
.spell-columns {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    grid-gap: 2px;
    padding: 2px;
    background-color: #ddd;
    grid-area: columns;
}
.spell-column {
    display: flex;
    flex-direction: column;
    height: 100%;
    background-color: white;
    min-width: 0;
}
.spell-level-title {
    display: grid;
    height: 50px;
    grid-template-columns: 26px 1fr 2fr;
    margin: 5px;
}
.spell-level-label-container, .slots-total-container, .slots-expended-outer-container {  
    border: 3px solid black;
    position: relative;
}
.slots-total-container, .slots-expended-outer-container {
    margin: 5px 0;
    border-left: none;
    font-size: 16px;
}
.spell-level-label-container {
    width: 30px;
    border-radius: 0 30px 30px 0;
    font-weight: bold;
    font-size: 20px;
    box-shadow: inset 0 0 0 5px #ddd;
}
.slots-total-container {
    border-radius: 0 18px 18px 0;
    width: calc(100% + 15px);
    border-right: 5px double black;
}
.slots-expended-outer-container {
    border-radius: 0 15px 15px 0;
}
.slots-expended-inner-container {
    margin: 3px;
    border: 1px solid black;
    border-radius: 20px / 14px;
    height: 28px;
    margin-left: 12px;
    position: relative;
}
.spell-level-label {
    padding-right: 3px;
}
.cantrips .spell-level-title {
    grid-template-columns: 26px auto 1fr;
}
.cantrips .slots-expended {
    font-weight: bold;
    text-transform: uppercase;
    font-size: 11px;
}
.cantrips .customCheckbox {
    display: none;
}
.spell-list {
    display: flex;
    flex-direction: column;
    padding: 2px 10px;
    gap: 2px;
}
.spell-entry {
    display: grid;
    grid-template-columns: auto 1fr 0;
    grid-template-areas: "checkbox text phantom";
    align-items: center;
}
.spell-entry > .customCheckbox {
    grid-area: checkbox;
}
.spell-name-container {
    border-bottom: 1px solid #888;
    display: inline-block;
    width: 100%;
    grid-area: text;
    height: 100%;
}
.spell-phantom {
    width: 0;
    grid-area: phantom;
    border-bottom: 1px solid transparent;
}

/* #region offPage */
/* .proficiencyCheckbox {
    margin-left: 0;
} */
body[data-editing="true"] .proficiency label {
    cursor: pointer;
}
body[data-editing="true"] .proficiency label [contentEditable] {
    cursor: text;
}

* {
    outline: none;
}
#top-left {
    position: fixed;
    top: 20px;
    left: 20px;
    display: flex;
    align-items: center;
    gap: 10px;
    width: calc((100vw - 9.5in) / 2 - 20px);
}
#title {
    font-size: 30px;
    font-weight: 450;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
}
#home {
    display: block;
    /* display: flex;
    justify-content: center;
    align-items: center;
    cursor: pointer;
    background-color: transparent;
    width: 60px;
    height: 60px;*/
    height: 40px;
    /* border-radius: 3px; */
    flex-shrink: 0;
}
/* #home:hover {
    background-color: #0002;
} */
#home img {
    height: 40px;
    aspect-ratio: 1;
}
button {
    padding: 0;
    border: none;
    cursor: pointer;
}
#buttons, #collapsible-buttons > div {
    display: flex;
    flex-direction: column;
    gap: 10px;
}
#buttons {
    position: fixed;
    right: 20px;
    bottom: 20px;
}
#buttons button {
    position: relative;
    width: 60px;
    height: 60px;
    border-radius: 50%;
    box-shadow: 2px 2px 3px #0004;
    background-color: white;
}
#buttons button:hover, #buttons button:disabled {
    background-color: #ddd;
}
#buttons button::before {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-repeat: no-repeat;
    background-position: center center;
    background-size: 50%;
}
#buttons button:disabled::before {
    opacity: .6;
}
#saving {
    position: fixed;
    bottom: 2px;
    left: 2px;
}
#collapsible-buttons {
    height: auto;
    overflow-y: clip;
    position: relative;
    top: 10px;
    padding-bottom: 10px;
}
#collapsible-buttons > div {
    translate: 0 0;
    transition: translate 500ms ease-in-out;
}
#collapsible-buttons.collapse > div {
    translate: 0 calc(100% - 60px);
}

#edit::before {
    background-image: url(/static/img/edit.png);
}
body[data-editing="true"] #edit::before {
    background-image: url(/static/img/save.png);
}
#add-spell-sheet::before {
    background-image: url(/static/img/magic-plus.png)
}
#revive {
    display: none;
}
body.dead #revive {
    display: initial;
}
#buttons #revive::before {
    background-size: 42%, 60%;
    background-image: url(/static/img/skull.png),
        url(/static/img/revive-out.png);
}

#collapse::before {
    background-image: url(/static/img/down-arrow.png);
    transition: rotate 500ms ease-in-out;
}
#collapsible-buttons.collapse #collapse::before {
    rotate: 180deg;
}
#kill::before {
    background-image: url(/static/img/skull.png);
}
#settings::before {
    background-image: url(/static/img/settings.png);
}


@property --base-heart-level {
    syntax: "<length>";
    inherits: true;
    initial-value: 0px;
}

:root[data-failed-death-saves] {
    transition: --base-heart-level 1s ease-in-out;
}

:root[data-failed-death-saves="0"] {
    --base-heart-level: 25px;
}

:root[data-failed-death-saves="1"] {
    --base-heart-level: 50px;
}

:root[data-failed-death-saves="2"] {
    --base-heart-level: 75px;
}

/* :root[data-failed-death-saves="3"] {
    --base-heart-level: 100px;
} */

.overlay {
    pointer-events: none;
    position: fixed;
    overflow: hidden;
    top: 0;
    left: 0;
    bottom: 0;
    right: 0;
    display: none;
}

body.unconscious #heartbeat-overlay {
    display: initial;
    z-index: 3;
    animation: 1s ease infinite heartbeat;
}

body.death-animation #death-overlay {
    display: initial;
    background: radial-gradient(ellipse closest-side, transparent 0%, rgba(0, 0, 0, 0.2) calc(100% - 300px), black 100%);
    box-shadow: 0 0 0 100vmax black;
    z-index: 4;
    animation: 2s linear forwards death, 1.5s ease-in 7s reverse forwards death;
    overflow: visible;
}

body.death-animation #rip {
    position: absolute;
    top: 50%;
    left: 50%;
    /* translate: -50% -50%; */
    animation: 2s ease 2s both rip-appear, 1s ease 6s reverse forwards rip-appear;
    font-size: 100px;
    color: white;
    font-weight: bold;
    width: 90vw;
    text-align: center;
}

#rip-name::before {
    color: white;
}

@keyframes heartbeat {
    0%, 40%, 80%, 100% { box-shadow: 0 0 var(--base-heart-level) inset red; }
    20%, 60% { box-shadow: 0 0 calc(var(--base-heart-level) + 25px) inset red; }
}

@keyframes death {
    from {
        top: -50%;
        left: -50%;
        bottom: -50%;
        right: -50%;
    }
    to { 
        top: 50%;
        left: 50%;
        bottom: 50%;
        right: 50%;
    }
}

@keyframes rip-appear {
    from {
        opacity: 0;
        translate: -50% 0;
    }
    to {
        opacity: 1;
        translate: -50% -50%;
    }
}

input[type="checkbox"]:not(.default-checkbox) {
    display: none;
}
.customCheckbox {
    border: 1px solid black;
    border-radius: 50%;
    height: 7px;
    width: 7px;
    display: inline-block;
    margin-right: 4px;
    vertical-align: middle;
    background-color: white;
}
input[type="checkbox"]:checked + .customCheckbox {
    background-color: #444;
}
input[type="checkbox"]:not(:disabled) + .customCheckbox {
    cursor: pointer;
}
/* input[type="checkbox"]:checked + .customCheckbox::after {
    content: "";
    width: calc(100% - 4px);
    height: calc(100% - 4px);
    margin: 2px;
    border-radius: 50%;
    background-color: black;
    display: block;
} */
/* #endregion */